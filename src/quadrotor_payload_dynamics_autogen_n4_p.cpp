#include "quadrotor_payload_dynamics_autogen_n4_p.hpp"
#include <cmath>
// Generated on 2024-11-22--14-09-28

namespace dynobench {
void calcV_n4_p(double* ff, double mp, double arm_length, double t2t, const double *m, const double *J_vx, const double *J_vy, const double *J_vz, const double *l, const double *x, const double *u) {
    double x0 = pow(x[6], 2);
    double x1 = pow(x[7], 2);
    double x2 = pow(x[8], 2);
    double x3 = x0 + x1 + x2;
    double x4 = 1.0/x3;
    double x5 = x0*x4;
    double x6 = pow(x[12], 2);
    double x7 = pow(x[13], 2);
    double x8 = pow(x[14], 2);
    double x9 = x6 + x7 + x8;
    double x10 = 1.0/x9;
    double x11 = x10*x6;
    double x12 = pow(x[18], 2);
    double x13 = pow(x[19], 2);
    double x14 = pow(x[20], 2);
    double x15 = x12 + x13 + x14;
    double x16 = 1.0/x15;
    double x17 = x12*x16;
    double x18 = pow(x[24], 2);
    double x19 = pow(x[25], 2);
    double x20 = pow(x[26], 2);
    double x21 = x18 + x19 + x20;
    double x22 = 1.0/x21;
    double x23 = x18*x22;
    double x24 = 1.0/(m[0]*x5 + m[1]*x11 + m[2]*x17 + m[3]*x23 + mp);
    double x25 = x4*x[6];
    double x26 = x25*x[7];
    double x27 = x10*x[12];
    double x28 = x27*x[13];
    double x29 = x16*x[18];
    double x30 = x29*x[19];
    double x31 = x22*x[24];
    double x32 = x31*x[25];
    double x33 = m[0]*x26 + m[1]*x28 + m[2]*x30 + m[3]*x32;
    double x34 = x1*x4;
    double x35 = x10*x7;
    double x36 = x13*x16;
    double x37 = x19*x22;
    double x38 = 1.0/(m[0]*x34 + m[1]*x35 + m[2]*x36 + m[3]*x37 + mp - x24*pow(x33, 2));
    double x39 = x4*x[7]*x[8];
    double x40 = x10*x[13]*x[14];
    double x41 = x16*x[19]*x[20];
    double x42 = x22*x[25]*x[26];
    double x43 = x25*x[8];
    double x44 = x27*x[14];
    double x45 = x29*x[20];
    double x46 = x31*x[26];
    double x47 = m[0]*x43 + m[1]*x44 + m[2]*x45 + m[3]*x46;
    double x48 = x24*x33;
    double x49 = m[0]*x39 + m[1]*x40 + m[2]*x41 + m[3]*x42 - x47*x48;
    double x50 = x2*x4;
    double x51 = x10*x8;
    double x52 = x14*x16;
    double x53 = x20*x22;
    double x54 = pow(x3, -1.0/2.0);
    double x55 = x54*x[8];
    double x56 = l[0]*m[0]*(pow(x[10], 2) + pow(x[11], 2) + pow(x[9], 2));
    double x57 = pow(x9, -1.0/2.0);
    double x58 = x57*x[14];
    double x59 = l[1]*m[1]*(pow(x[15], 2) + pow(x[16], 2) + pow(x[17], 2));
    double x60 = pow(x15, -1.0/2.0);
    double x61 = x60*x[20];
    double x62 = l[2]*m[2]*(pow(x[21], 2) + pow(x[22], 2) + pow(x[23], 2));
    double x63 = pow(x21, -1.0/2.0);
    double x64 = x63*x[26];
    double x65 = l[3]*m[3]*(pow(x[27], 2) + pow(x[28], 2) + pow(x[29], 2));
    double x66 = pow(x[37], 2);
    double x67 = pow(x[38], 2);
    double x68 = pow(x[39], 2);
    double x69 = pow(x[40], 2);
    double x70 = x66 + x67 + x68 + x69;
    double x71 = 2.4525000000000001*m[1];
    double x72 = u[4]*x71;
    double x73 = u[5]*x71;
    double x74 = u[6]*x71;
    double x75 = u[7]*x71;
    double x76 = (x72 + x73 + x74 + x75)/x70;
    double x77 = 2*x76;
    double x78 = x77*x[37];
    double x79 = x77*x[38];
    double x80 = x78*x[39] + x79*x[40];
    double x81 = -x78*x[40] + x79*x[39];
    double x82 = pow(x[44], 2);
    double x83 = pow(x[45], 2);
    double x84 = pow(x[46], 2);
    double x85 = pow(x[47], 2);
    double x86 = x82 + x83 + x84 + x85;
    double x87 = 2.4525000000000001*m[2];
    double x88 = u[10]*x87;
    double x89 = u[11]*x87;
    double x90 = u[8]*x87;
    double x91 = u[9]*x87;
    double x92 = (x88 + x89 + x90 + x91)/x86;
    double x93 = 2*x92;
    double x94 = x93*x[44];
    double x95 = x93*x[45];
    double x96 = x94*x[46] + x95*x[47];
    double x97 = -x94*x[47] + x95*x[46];
    double x98 = pow(x[51], 2);
    double x99 = pow(x[52], 2);
    double x100 = pow(x[53], 2);
    double x101 = pow(x[54], 2);
    double x102 = x100 + x101 + x98 + x99;
    double x103 = 2.4525000000000001*m[3];
    double x104 = u[12]*x103;
    double x105 = u[13]*x103;
    double x106 = u[14]*x103;
    double x107 = u[15]*x103;
    double x108 = (x104 + x105 + x106 + x107)/x102;
    double x109 = 2*x108;
    double x110 = x109*x[51];
    double x111 = x109*x[52];
    double x112 = x110*x[53] + x111*x[54];
    double x113 = -x110*x[54] + x111*x[53];
    double x114 = pow(x[30], 2);
    double x115 = pow(x[31], 2);
    double x116 = pow(x[32], 2);
    double x117 = pow(x[33], 2);
    double x118 = x114 + x115 + x116 + x117;
    double x119 = 2.4525000000000001*m[0];
    double x120 = u[0]*x119;
    double x121 = u[1]*x119;
    double x122 = u[2]*x119;
    double x123 = u[3]*x119;
    double x124 = (x120 + x121 + x122 + x123)/x118;
    double x125 = 2*x124;
    double x126 = x125*x[30];
    double x127 = x125*x[31];
    double x128 = x126*x[32] + x127*x[33];
    double x129 = -x126*x[33] + x127*x[32];
    double x130 = -x66*x76 - x67*x76 + x68*x76 + x69*x76;
    double x131 = -x82*x92 - x83*x92 + x84*x92 + x85*x92;
    double x132 = x100*x108 + x101*x108 - x108*x98 - x108*x99;
    double x133 = -x114*x124 - x115*x124 + x116*x124 + x117*x124;
    double x134 = x54*x[6];
    double x135 = x57*x[12];
    double x136 = x60*x[18];
    double x137 = x63*x[24];
    double x138 = x11*x80 + x112*x23 + x113*x32 + x128*x5 + x129*x26 + x130*x44 + x131*x45 + x132*x46 + x133*x43 - x134*x56 - x135*x59 - x136*x62 - x137*x65 + x17*x96 + x28*x81 + x30*x97;
    double x139 = x54*x[7];
    double x140 = x57*x[13];
    double x141 = x60*x[19];
    double x142 = x63*x[25];
    double x143 = x112*x32 + x113*x37 + x128*x26 + x129*x34 + x130*x40 + x131*x41 + x132*x42 + x133*x39 - x138*x48 - x139*x56 - x140*x59 - x141*x62 - x142*x65 + x28*x80 + x30*x96 + x35*x81 + x36*x97;
    double x144 = (x112*x46 + x113*x42 + x128*x43 + x129*x39 + x130*x51 + x131*x52 + x132*x53 + x133*x50 - x138*x24*x47 - x143*x38*x49 + x40*x81 + x41*x97 + x44*x80 + x45*x96 - x55*x56 - x58*x59 - x61*x62 - x64*x65)/(m[0]*x50 + m[1]*x51 + m[2]*x52 + m[3]*x53 + mp - x24*pow(x47, 2) - x38*pow(x49, 2));
    double x145 = x38*(x143 - x144*x49);
    double x146 = x24*(x138 - x144*x47 - x145*x33);
    double x147 = x54*x[11];
    double x148 = 1.0/l[0];
    double x149 = x148/m[0];
    double x150 = x57*x[17];
    double x151 = 1.0/l[1];
    double x152 = x151/m[1];
    double x153 = x60*x[23];
    double x154 = 1.0/l[2];
    double x155 = x154/m[2];
    double x156 = x63*x[29];
    double x157 = 1.0/l[3];
    double x158 = x157/m[3];
    double x159 = (1.0/2.0)/sqrt(x118);
    double x160 = x159*x[36];
    double x161 = x159*x[35];
    double x162 = x159*x[34];
    double x163 = x[35]*x[36];
    double x164 = 1.7341793804025001*arm_length;
    double x165 = m[0]*x164;
    double x166 = u[3]*x165;
    double x167 = u[1]*x165;
    double x168 = -u[0]*x165 + u[2]*x165;
    double x169 = x[34]*x[36];
    double x170 = x[34]*x[35];
    double x171 = (1.0/2.0)/sqrt(x70);
    double x172 = x171*x[43];
    double x173 = x171*x[42];
    double x174 = x171*x[41];
    double x175 = x[42]*x[43];
    double x176 = m[1]*x164;
    double x177 = u[7]*x176;
    double x178 = u[5]*x176;
    double x179 = -u[4]*x176 + u[6]*x176;
    double x180 = x[41]*x[43];
    double x181 = x[41]*x[42];
    double x182 = (1.0/2.0)/sqrt(x86);
    double x183 = x182*x[50];
    double x184 = x182*x[49];
    double x185 = x182*x[48];
    double x186 = x[49]*x[50];
    double x187 = m[2]*x164;
    double x188 = u[11]*x187;
    double x189 = u[9]*x187;
    double x190 = u[10]*x187 - u[8]*x187;
    double x191 = x[48]*x[50];
    double x192 = x[48]*x[49];
    double x193 = (1.0/2.0)/sqrt(x102);
    double x194 = x193*x[57];
    double x195 = x193*x[56];
    double x196 = x193*x[55];
    double x197 = x[56]*x[57];
    double x198 = m[3]*x164;
    double x199 = u[15]*x198;
    double x200 = u[13]*x198;
    double x201 = -u[12]*x198 + u[14]*x198;
    double x202 = x[55]*x[57];
    double x203 = x[55]*x[56];
    ff[0] = x[3];
    ff[1] = x[4];
    ff[2] = x[5];
    ff[3] = x146;
    ff[4] = x145;
    ff[5] = x144 - 9.8100000000000005;
    ff[6] = -x147*x[7] + x55*x[10];
    ff[7] = x147*x[6] - x55*x[9];
    ff[8] = -x134*x[10] + x139*x[9];
    ff[9] = x148*(x139*x144 - x145*x55) - x149*(-x129*x55 + x133*x139);
    ff[10] = x148*(-x134*x144 + x146*x55) - x149*(x128*x55 - x133*x134);
    ff[11] = x148*(x134*x145 - x139*x146) - x149*(-x128*x139 + x129*x134);
    ff[12] = -x150*x[13] + x58*x[16];
    ff[13] = x150*x[12] - x58*x[15];
    ff[14] = -x135*x[16] + x140*x[15];
    ff[15] = x151*(x140*x144 - x145*x58) - x152*(x130*x140 - x58*x81);
    ff[16] = x151*(-x135*x144 + x146*x58) - x152*(-x130*x135 + x58*x80);
    ff[17] = x151*(x135*x145 - x140*x146) - x152*(x135*x81 - x140*x80);
    ff[18] = -x153*x[19] + x61*x[22];
    ff[19] = x153*x[18] - x61*x[21];
    ff[20] = -x136*x[22] + x141*x[21];
    ff[21] = x154*(x141*x144 - x145*x61) - x155*(x131*x141 - x61*x97);
    ff[22] = x154*(-x136*x144 + x146*x61) - x155*(-x131*x136 + x61*x96);
    ff[23] = x154*(x136*x145 - x141*x146) - x155*(x136*x97 - x141*x96);
    ff[24] = -x156*x[25] + x64*x[28];
    ff[25] = x156*x[24] - x64*x[27];
    ff[26] = -x137*x[28] + x142*x[27];
    ff[27] = x157*(x142*x144 - x145*x64) - x158*(-x113*x64 + x132*x142);
    ff[28] = x157*(-x137*x144 + x146*x64) - x158*(x112*x64 - x132*x137);
    ff[29] = x157*(x137*x145 - x142*x146) - x158*(-x112*x142 + x113*x137);
    ff[30] = -x160*x[31] + x161*x[32] + x162*x[33];
    ff[31] = x160*x[30] + x161*x[33] - x162*x[32];
    ff[32] = x160*x[33] - x161*x[30] + x162*x[31];
    ff[33] = -x160*x[32] - x161*x[31] - x162*x[30];
    ff[34] = (J_vy[0]*x163 - J_vz[0]*x163 + x166 - x167 + x168)/J_vx[0];
    ff[35] = (-J_vx[0]*x169 + J_vz[0]*x169 - x166 + x167 + x168)/J_vy[0];
    ff[36] = (J_vx[0]*x170 - J_vy[0]*x170 - t2t*x120 + t2t*x121 - t2t*x122 + t2t*x123)/J_vz[0];
    ff[37] = -x172*x[38] + x173*x[39] + x174*x[40];
    ff[38] = x172*x[37] + x173*x[40] - x174*x[39];
    ff[39] = x172*x[40] - x173*x[37] + x174*x[38];
    ff[40] = -x172*x[39] - x173*x[38] - x174*x[37];
    ff[41] = (J_vy[1]*x175 - J_vz[1]*x175 + x177 - x178 + x179)/J_vx[1];
    ff[42] = (-J_vx[1]*x180 + J_vz[1]*x180 - x177 + x178 + x179)/J_vy[1];
    ff[43] = (J_vx[1]*x181 - J_vy[1]*x181 - t2t*x72 + t2t*x73 - t2t*x74 + t2t*x75)/J_vz[1];
    ff[44] = -x183*x[45] + x184*x[46] + x185*x[47];
    ff[45] = x183*x[44] + x184*x[47] - x185*x[46];
    ff[46] = x183*x[47] - x184*x[44] + x185*x[45];
    ff[47] = -x183*x[46] - x184*x[45] - x185*x[44];
    ff[48] = (J_vy[2]*x186 - J_vz[2]*x186 + x188 - x189 + x190)/J_vx[2];
    ff[49] = (-J_vx[2]*x191 + J_vz[2]*x191 - x188 + x189 + x190)/J_vy[2];
    ff[50] = (J_vx[2]*x192 - J_vy[2]*x192 - t2t*x88 + t2t*x89 - t2t*x90 + t2t*x91)/J_vz[2];
    ff[51] = -x194*x[52] + x195*x[53] + x196*x[54];
    ff[52] = x194*x[51] + x195*x[54] - x196*x[53];
    ff[53] = x194*x[54] - x195*x[51] + x196*x[52];
    ff[54] = -x194*x[53] - x195*x[52] - x196*x[51];
    ff[55] = (J_vy[3]*x197 - J_vz[3]*x197 + x199 - x200 + x201)/J_vx[3];
    ff[56] = (-J_vx[3]*x202 + J_vz[3]*x202 - x199 + x200 + x201)/J_vy[3];
    ff[57] = (J_vx[3]*x203 - J_vy[3]*x203 - t2t*x104 + t2t*x105 - t2t*x106 + t2t*x107)/J_vz[3];
}
void calcStep_n4_p(double* xnext, double mp, double arm_length, double t2t, const double *m, const double *J_vx, const double *J_vy, const double *J_vz, const double *l, const double *x, const double *u, double dt) {
    double x0 = pow(x[6], 2);
    double x1 = pow(x[7], 2);
    double x2 = pow(x[8], 2);
    double x3 = x0 + x1 + x2;
    double x4 = 1.0/x3;
    double x5 = x0*x4;
    double x6 = pow(x[12], 2);
    double x7 = pow(x[13], 2);
    double x8 = pow(x[14], 2);
    double x9 = x6 + x7 + x8;
    double x10 = 1.0/x9;
    double x11 = x10*x6;
    double x12 = pow(x[18], 2);
    double x13 = pow(x[19], 2);
    double x14 = pow(x[20], 2);
    double x15 = x12 + x13 + x14;
    double x16 = 1.0/x15;
    double x17 = x12*x16;
    double x18 = pow(x[24], 2);
    double x19 = pow(x[25], 2);
    double x20 = pow(x[26], 2);
    double x21 = x18 + x19 + x20;
    double x22 = 1.0/x21;
    double x23 = x18*x22;
    double x24 = 1.0/(m[0]*x5 + m[1]*x11 + m[2]*x17 + m[3]*x23 + mp);
    double x25 = x4*x[6];
    double x26 = x25*x[7];
    double x27 = x10*x[12];
    double x28 = x27*x[13];
    double x29 = x16*x[18];
    double x30 = x29*x[19];
    double x31 = x22*x[24];
    double x32 = x31*x[25];
    double x33 = m[0]*x26 + m[1]*x28 + m[2]*x30 + m[3]*x32;
    double x34 = x1*x4;
    double x35 = x10*x7;
    double x36 = x13*x16;
    double x37 = x19*x22;
    double x38 = 1.0/(m[0]*x34 + m[1]*x35 + m[2]*x36 + m[3]*x37 + mp - x24*pow(x33, 2));
    double x39 = x4*x[7]*x[8];
    double x40 = x10*x[13]*x[14];
    double x41 = x16*x[19]*x[20];
    double x42 = x22*x[25]*x[26];
    double x43 = x25*x[8];
    double x44 = x27*x[14];
    double x45 = x29*x[20];
    double x46 = x31*x[26];
    double x47 = m[0]*x43 + m[1]*x44 + m[2]*x45 + m[3]*x46;
    double x48 = x24*x33;
    double x49 = m[0]*x39 + m[1]*x40 + m[2]*x41 + m[3]*x42 - x47*x48;
    double x50 = x2*x4;
    double x51 = x10*x8;
    double x52 = x14*x16;
    double x53 = x20*x22;
    double x54 = pow(x3, -1.0/2.0);
    double x55 = x54*x[8];
    double x56 = l[0]*m[0]*(pow(x[10], 2) + pow(x[11], 2) + pow(x[9], 2));
    double x57 = pow(x9, -1.0/2.0);
    double x58 = x57*x[14];
    double x59 = l[1]*m[1]*(pow(x[15], 2) + pow(x[16], 2) + pow(x[17], 2));
    double x60 = pow(x15, -1.0/2.0);
    double x61 = x60*x[20];
    double x62 = l[2]*m[2]*(pow(x[21], 2) + pow(x[22], 2) + pow(x[23], 2));
    double x63 = pow(x21, -1.0/2.0);
    double x64 = x63*x[26];
    double x65 = l[3]*m[3]*(pow(x[27], 2) + pow(x[28], 2) + pow(x[29], 2));
    double x66 = pow(x[37], 2);
    double x67 = pow(x[38], 2);
    double x68 = pow(x[39], 2);
    double x69 = pow(x[40], 2);
    double x70 = x66 + x67 + x68 + x69;
    double x71 = 2.4525000000000001*m[1];
    double x72 = u[4]*x71;
    double x73 = u[5]*x71;
    double x74 = u[6]*x71;
    double x75 = u[7]*x71;
    double x76 = (x72 + x73 + x74 + x75)/x70;
    double x77 = 2*x76;
    double x78 = x77*x[37];
    double x79 = x77*x[38];
    double x80 = x78*x[39] + x79*x[40];
    double x81 = -x78*x[40] + x79*x[39];
    double x82 = pow(x[44], 2);
    double x83 = pow(x[45], 2);
    double x84 = pow(x[46], 2);
    double x85 = pow(x[47], 2);
    double x86 = x82 + x83 + x84 + x85;
    double x87 = 2.4525000000000001*m[2];
    double x88 = u[10]*x87;
    double x89 = u[11]*x87;
    double x90 = u[8]*x87;
    double x91 = u[9]*x87;
    double x92 = (x88 + x89 + x90 + x91)/x86;
    double x93 = 2*x92;
    double x94 = x93*x[44];
    double x95 = x93*x[45];
    double x96 = x94*x[46] + x95*x[47];
    double x97 = -x94*x[47] + x95*x[46];
    double x98 = pow(x[51], 2);
    double x99 = pow(x[52], 2);
    double x100 = pow(x[53], 2);
    double x101 = pow(x[54], 2);
    double x102 = x100 + x101 + x98 + x99;
    double x103 = 2.4525000000000001*m[3];
    double x104 = u[12]*x103;
    double x105 = u[13]*x103;
    double x106 = u[14]*x103;
    double x107 = u[15]*x103;
    double x108 = (x104 + x105 + x106 + x107)/x102;
    double x109 = 2*x108;
    double x110 = x109*x[51];
    double x111 = x109*x[52];
    double x112 = x110*x[53] + x111*x[54];
    double x113 = -x110*x[54] + x111*x[53];
    double x114 = pow(x[30], 2);
    double x115 = pow(x[31], 2);
    double x116 = pow(x[32], 2);
    double x117 = pow(x[33], 2);
    double x118 = x114 + x115 + x116 + x117;
    double x119 = 2.4525000000000001*m[0];
    double x120 = u[0]*x119;
    double x121 = u[1]*x119;
    double x122 = u[2]*x119;
    double x123 = u[3]*x119;
    double x124 = (x120 + x121 + x122 + x123)/x118;
    double x125 = 2*x124;
    double x126 = x125*x[30];
    double x127 = x125*x[31];
    double x128 = x126*x[32] + x127*x[33];
    double x129 = -x126*x[33] + x127*x[32];
    double x130 = -x66*x76 - x67*x76 + x68*x76 + x69*x76;
    double x131 = -x82*x92 - x83*x92 + x84*x92 + x85*x92;
    double x132 = x100*x108 + x101*x108 - x108*x98 - x108*x99;
    double x133 = -x114*x124 - x115*x124 + x116*x124 + x117*x124;
    double x134 = x54*x[6];
    double x135 = x57*x[12];
    double x136 = x60*x[18];
    double x137 = x63*x[24];
    double x138 = x11*x80 + x112*x23 + x113*x32 + x128*x5 + x129*x26 + x130*x44 + x131*x45 + x132*x46 + x133*x43 - x134*x56 - x135*x59 - x136*x62 - x137*x65 + x17*x96 + x28*x81 + x30*x97;
    double x139 = x54*x[7];
    double x140 = x57*x[13];
    double x141 = x60*x[19];
    double x142 = x63*x[25];
    double x143 = x112*x32 + x113*x37 + x128*x26 + x129*x34 + x130*x40 + x131*x41 + x132*x42 + x133*x39 - x138*x48 - x139*x56 - x140*x59 - x141*x62 - x142*x65 + x28*x80 + x30*x96 + x35*x81 + x36*x97;
    double x144 = (x112*x46 + x113*x42 + x128*x43 + x129*x39 + x130*x51 + x131*x52 + x132*x53 + x133*x50 - x138*x24*x47 - x143*x38*x49 + x40*x81 + x41*x97 + x44*x80 + x45*x96 - x55*x56 - x58*x59 - x61*x62 - x64*x65)/(m[0]*x50 + m[1]*x51 + m[2]*x52 + m[3]*x53 + mp - x24*pow(x47, 2) - x38*pow(x49, 2));
    double x145 = x38*(x143 - x144*x49);
    double x146 = x24*(x138 - x144*x47 - x145*x33);
    double x147 = x54*x[11];
    double x148 = dt*(-x147*x[7] + x55*x[10]) + x[6];
    double x149 = dt*(-x134*x[10] + x139*x[9]) + x[8];
    double x150 = dt*(x147*x[6] - x55*x[9]) + x[7];
    double x151 = pow(pow(x148, 2) + pow(x149, 2) + pow(x150, 2), -1.0/2.0);
    double x152 = 1.0/l[0];
    double x153 = x152/m[0];
    double x154 = x57*x[17];
    double x155 = dt*(-x154*x[13] + x58*x[16]) + x[12];
    double x156 = dt*(-x135*x[16] + x140*x[15]) + x[14];
    double x157 = dt*(x154*x[12] - x58*x[15]) + x[13];
    double x158 = pow(pow(x155, 2) + pow(x156, 2) + pow(x157, 2), -1.0/2.0);
    double x159 = 1.0/l[1];
    double x160 = x159/m[1];
    double x161 = x60*x[23];
    double x162 = dt*(-x161*x[19] + x61*x[22]) + x[18];
    double x163 = dt*(-x136*x[22] + x141*x[21]) + x[20];
    double x164 = dt*(x161*x[18] - x61*x[21]) + x[19];
    double x165 = pow(pow(x162, 2) + pow(x163, 2) + pow(x164, 2), -1.0/2.0);
    double x166 = 1.0/l[2];
    double x167 = x166/m[2];
    double x168 = x63*x[29];
    double x169 = dt*(-x168*x[25] + x64*x[28]) + x[24];
    double x170 = dt*(-x137*x[28] + x142*x[27]) + x[26];
    double x171 = dt*(x168*x[24] - x64*x[27]) + x[25];
    double x172 = pow(pow(x169, 2) + pow(x170, 2) + pow(x171, 2), -1.0/2.0);
    double x173 = 1.0/l[3];
    double x174 = x173/m[3];
    double x175 = (1.0/2.0)/sqrt(x118);
    double x176 = x175*x[36];
    double x177 = x175*x[35];
    double x178 = x175*x[34];
    double x179 = dt*(-x176*x[31] + x177*x[32] + x178*x[33]) + x[30];
    double x180 = dt*(-x176*x[32] - x177*x[31] - x178*x[30]) + x[33];
    double x181 = dt*(x176*x[33] - x177*x[30] + x178*x[31]) + x[32];
    double x182 = dt*(x176*x[30] + x177*x[33] - x178*x[32]) + x[31];
    double x183 = pow(pow(x179, 2) + pow(x180, 2) + pow(x181, 2) + pow(x182, 2), -1.0/2.0);
    double x184 = x[35]*x[36];
    double x185 = 1.7341793804025001*arm_length;
    double x186 = m[0]*x185;
    double x187 = u[3]*x186;
    double x188 = u[1]*x186;
    double x189 = -u[0]*x186 + u[2]*x186;
    double x190 = x[34]*x[36];
    double x191 = x[34]*x[35];
    double x192 = (1.0/2.0)/sqrt(x70);
    double x193 = x192*x[43];
    double x194 = x192*x[42];
    double x195 = x192*x[41];
    double x196 = dt*(-x193*x[38] + x194*x[39] + x195*x[40]) + x[37];
    double x197 = dt*(-x193*x[39] - x194*x[38] - x195*x[37]) + x[40];
    double x198 = dt*(x193*x[40] - x194*x[37] + x195*x[38]) + x[39];
    double x199 = dt*(x193*x[37] + x194*x[40] - x195*x[39]) + x[38];
    double x200 = pow(pow(x196, 2) + pow(x197, 2) + pow(x198, 2) + pow(x199, 2), -1.0/2.0);
    double x201 = x[42]*x[43];
    double x202 = m[1]*x185;
    double x203 = u[7]*x202;
    double x204 = u[5]*x202;
    double x205 = -u[4]*x202 + u[6]*x202;
    double x206 = x[41]*x[43];
    double x207 = x[41]*x[42];
    double x208 = (1.0/2.0)/sqrt(x86);
    double x209 = x208*x[50];
    double x210 = x208*x[49];
    double x211 = x208*x[48];
    double x212 = dt*(-x209*x[45] + x210*x[46] + x211*x[47]) + x[44];
    double x213 = dt*(-x209*x[46] - x210*x[45] - x211*x[44]) + x[47];
    double x214 = dt*(x209*x[47] - x210*x[44] + x211*x[45]) + x[46];
    double x215 = dt*(x209*x[44] + x210*x[47] - x211*x[46]) + x[45];
    double x216 = pow(pow(x212, 2) + pow(x213, 2) + pow(x214, 2) + pow(x215, 2), -1.0/2.0);
    double x217 = x[49]*x[50];
    double x218 = m[2]*x185;
    double x219 = u[11]*x218;
    double x220 = u[9]*x218;
    double x221 = u[10]*x218 - u[8]*x218;
    double x222 = x[48]*x[50];
    double x223 = x[48]*x[49];
    double x224 = (1.0/2.0)/sqrt(x102);
    double x225 = x224*x[57];
    double x226 = x224*x[56];
    double x227 = x224*x[55];
    double x228 = dt*(-x225*x[52] + x226*x[53] + x227*x[54]) + x[51];
    double x229 = dt*(-x225*x[53] - x226*x[52] - x227*x[51]) + x[54];
    double x230 = dt*(x225*x[54] - x226*x[51] + x227*x[52]) + x[53];
    double x231 = dt*(x225*x[51] + x226*x[54] - x227*x[53]) + x[52];
    double x232 = pow(pow(x228, 2) + pow(x229, 2) + pow(x230, 2) + pow(x231, 2), -1.0/2.0);
    double x233 = x[56]*x[57];
    double x234 = m[3]*x185;
    double x235 = u[15]*x234;
    double x236 = u[13]*x234;
    double x237 = -u[12]*x234 + u[14]*x234;
    double x238 = x[55]*x[57];
    double x239 = x[55]*x[56];
    xnext[0] = dt*x[3] + x[0];
    xnext[1] = dt*x[4] + x[1];
    xnext[2] = dt*x[5] + x[2];
    xnext[3] = dt*x146 + x[3];
    xnext[4] = dt*x145 + x[4];
    xnext[5] = dt*(x144 - 9.8100000000000005) + x[5];
    xnext[6] = x148*x151;
    xnext[7] = x150*x151;
    xnext[8] = x149*x151;
    xnext[9] = dt*(x152*(x139*x144 - x145*x55) - x153*(-x129*x55 + x133*x139)) + x[9];
    xnext[10] = dt*(x152*(-x134*x144 + x146*x55) - x153*(x128*x55 - x133*x134)) + x[10];
    xnext[11] = dt*(x152*(x134*x145 - x139*x146) - x153*(-x128*x139 + x129*x134)) + x[11];
    xnext[12] = x155*x158;
    xnext[13] = x157*x158;
    xnext[14] = x156*x158;
    xnext[15] = dt*(x159*(x140*x144 - x145*x58) - x160*(x130*x140 - x58*x81)) + x[15];
    xnext[16] = dt*(x159*(-x135*x144 + x146*x58) - x160*(-x130*x135 + x58*x80)) + x[16];
    xnext[17] = dt*(x159*(x135*x145 - x140*x146) - x160*(x135*x81 - x140*x80)) + x[17];
    xnext[18] = x162*x165;
    xnext[19] = x164*x165;
    xnext[20] = x163*x165;
    xnext[21] = dt*(x166*(x141*x144 - x145*x61) - x167*(x131*x141 - x61*x97)) + x[21];
    xnext[22] = dt*(x166*(-x136*x144 + x146*x61) - x167*(-x131*x136 + x61*x96)) + x[22];
    xnext[23] = dt*(x166*(x136*x145 - x141*x146) - x167*(x136*x97 - x141*x96)) + x[23];
    xnext[24] = x169*x172;
    xnext[25] = x171*x172;
    xnext[26] = x170*x172;
    xnext[27] = dt*(x173*(x142*x144 - x145*x64) - x174*(-x113*x64 + x132*x142)) + x[27];
    xnext[28] = dt*(x173*(-x137*x144 + x146*x64) - x174*(x112*x64 - x132*x137)) + x[28];
    xnext[29] = dt*(x173*(x137*x145 - x142*x146) - x174*(-x112*x142 + x113*x137)) + x[29];
    xnext[30] = x179*x183;
    xnext[31] = x182*x183;
    xnext[32] = x181*x183;
    xnext[33] = x180*x183;
    xnext[34] = x[34] + dt*(J_vy[0]*x184 - J_vz[0]*x184 + x187 - x188 + x189)/J_vx[0];
    xnext[35] = x[35] + dt*(-J_vx[0]*x190 + J_vz[0]*x190 - x187 + x188 + x189)/J_vy[0];
    xnext[36] = x[36] + dt*(J_vx[0]*x191 - J_vy[0]*x191 - t2t*x120 + t2t*x121 - t2t*x122 + t2t*x123)/J_vz[0];
    xnext[37] = x196*x200;
    xnext[38] = x199*x200;
    xnext[39] = x198*x200;
    xnext[40] = x197*x200;
    xnext[41] = x[41] + dt*(J_vy[1]*x201 - J_vz[1]*x201 + x203 - x204 + x205)/J_vx[1];
    xnext[42] = x[42] + dt*(-J_vx[1]*x206 + J_vz[1]*x206 - x203 + x204 + x205)/J_vy[1];
    xnext[43] = x[43] + dt*(J_vx[1]*x207 - J_vy[1]*x207 - t2t*x72 + t2t*x73 - t2t*x74 + t2t*x75)/J_vz[1];
    xnext[44] = x212*x216;
    xnext[45] = x215*x216;
    xnext[46] = x214*x216;
    xnext[47] = x213*x216;
    xnext[48] = x[48] + dt*(J_vy[2]*x217 - J_vz[2]*x217 + x219 - x220 + x221)/J_vx[2];
    xnext[49] = x[49] + dt*(-J_vx[2]*x222 + J_vz[2]*x222 - x219 + x220 + x221)/J_vy[2];
    xnext[50] = x[50] + dt*(J_vx[2]*x223 - J_vy[2]*x223 - t2t*x88 + t2t*x89 - t2t*x90 + t2t*x91)/J_vz[2];
    xnext[51] = x228*x232;
    xnext[52] = x231*x232;
    xnext[53] = x230*x232;
    xnext[54] = x229*x232;
    xnext[55] = x[55] + dt*(J_vy[3]*x233 - J_vz[3]*x233 + x235 - x236 + x237)/J_vx[3];
    xnext[56] = x[56] + dt*(-J_vx[3]*x238 + J_vz[3]*x238 - x235 + x236 + x237)/J_vy[3];
    xnext[57] = x[57] + dt*(J_vx[3]*x239 - J_vy[3]*x239 - t2t*x104 + t2t*x105 - t2t*x106 + t2t*x107)/J_vz[3];
}
} // namespace dynobench
